package database

import (
	_ "github.com/lib/pq"
	"github.com/metachris/go-ethutils/addressdetail"
)

var Schema = `
CREATE TABLE IF NOT EXISTS address (
    Address  text NOT NULL,
    Name     text NOT NULL,
    Type     text NOT NULL,
    Symbol   text NOT NULL,
    Decimals integer NOT NULL,

    PRIMARY KEY(address)
);

CREATE TABLE IF NOT EXISTS analysis (
    Id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    Date        text NOT NULL,
    Hour        integer NOT NULL,
    Minute      integer NOT NULL,
    Sec         integer NOT NULL,
    DurationSec integer NOT NULL,

    StartBlockNumber    integer NOT NULL,
    StartBlockTimestamp integer NOT NULL,
    EndBlockNumber      integer NOT NULL,
    EndBlockTimestamp   integer NOT NULL,

    NumBlocks           integer NOT NULL,
    NumBlocksWithoutTx  integer NOT NULL,

    GasUsed             NUMERIC(48, 0) NOT NULL,
    GasFeeTotal         NUMERIC(48, 0) NOT NULL,
    GasFeeFailedTx      NUMERIC(48, 0) NOT NULL,

    NumTransactions                  integer NOT NULL,
    NumTransactionsFailed            integer NOT NULL,
    NumTransactionsWithZeroValue     integer NOT NULL,
    NumTransactionsWithData          integer NOT NULL,

    NumTransactionsErc20Transfer     integer NOT NULL,
    NumTransactionsErc721Transfer    integer NOT NULL,

    NumFlashbotsTransactionsSuccess   integer NOT NULL,
    NumFlashbotsTransactionsFailed    integer NOT NULL,

    ValueTotalEth     NUMERIC(24, 8) NOT NULL,
	TotalAddresses    integer NOT NULL
);

CREATE TABLE IF NOT EXISTS analysis_address_stat (
    Id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

    Analysis_id int REFERENCES analysis (id) NOT NULL,
    Address     text REFERENCES address (address) NOT NULL,

	NumTxSentSuccess       int NOT NULL,
	NumTxSentFailed        int NOT NULL,
	NumTxReceivedSuccess   int NOT NULL,
	NumTxReceivedFailed    int NOT NULL,

	NumTxFlashbotsSent       int NOT NULL,
	NumTxFlashbotsReceived   int NOT NULL,
	NumTxWithDataSent        int NOT NULL,
	NumTxWithDataReceived    int NOT NULL,

	NumTxErc20Sent         int NOT NULL,
	NumTxErc721Sent        int NOT NULL,
	NumTxErc20Received     int NOT NULL,
	NumTxErc721Received    int NOT NULL,
	NumTxErc20Transfer     int NOT NULL,
	NumTxErc721Transfer    int NOT NULL,

	ValueSentEth       NUMERIC(32, 8) NOT NULL,
	ValueReceivedEth   NUMERIC(32, 8) NOT NULL,

	Erc20TokensTransferred  NUMERIC(48, 0) NOT NULL,
    TokensTransferredInUnit  NUMERIC(56, 8) NOT NULL,
    TokensTransferredSymbol  text NOT NULL,

	GasUsed          NUMERIC(48, 0) NOT NULL,
	GasFeeTotal      NUMERIC(48, 0) NOT NULL,
	GasFeeFailedTx   NUMERIC(48, 0) NOT NULL
);

CREATE TABLE IF NOT EXISTS block (
	Number    int,
	Time      int,
	NumTx     int,
	GasUsed   int,
	GasLimit  int,

	PRIMARY KEY (Number)
)
`

type AnalysisEntry struct {
	Id          int
	Date        string
	Hour        int
	Minute      int
	Sec         int
	DurationSec int

	StartBlockNumber    int
	StartBlockTimestamp int
	EndBlockNumber      int
	EndBlockTimestamp   int

	NumBlocks          int
	NumBlocksWithoutTx int

	GasUsed        string
	GasFeeTotal    string
	GasFeeFailedTx string

	NumTransactions              int
	NumTransactionsFailed        int
	NumTransactionsWithZeroValue int
	NumTransactionsWithData      int

	NumTransactionsErc20Transfer  int
	NumTransactionsErc721Transfer int

	NumFlashbotsTransactionsSuccess int
	NumFlashbotsTransactionsFailed  int

	ValueTotalEth  string
	TotalAddresses int

	// Calculated after fetching from DB:
	GasFeeTotalEth    string
	GasFeeFailedTxEth string
}

// func (entry *AnalysisEntry) CalcNumbers() {
// 	gasFeeTotal := new(big.Int)
// 	gasFeeTotal.SetString(entry.GasFeeTotal, 10)
// 	entry.GasFeeTotalEth = WeiBigIntToEthString(gasFeeTotal, 2)

// 	gasFeeFailed := new(big.Int)
// 	gasFeeFailed.SetString(entry.GasFeeFailedTx, 10)
// 	entry.GasFeeFailedTxEth = WeiBigIntToEthString(gasFeeFailed, 2)

// 	val := new(big.Float)
// 	val.SetString(entry.ValueTotalEth)
// 	entry.ValueTotalEth = BigFloatToHumanNumberString(val, 2)
// }

type AnalysisAddressStatsEntryWithAddress struct {
	Id int

	Analysis_id int
	Address     string

	NumTxSentSuccess     int
	NumTxSentFailed      int
	NumTxReceivedSuccess int
	NumTxReceivedFailed  int

	NumTxFlashbotsSent     int
	NumTxFlashbotsReceived int
	NumTxWithDataSent      int
	NumTxWithDataReceived  int

	NumTxErc20Sent      int
	NumTxErc721Sent     int
	NumTxErc20Received  int
	NumTxErc721Received int
	NumTxErc20Transfer  int
	NumTxErc721Transfer int

	ValueSentEth     string
	ValueReceivedEth string

	Erc20TokensTransferred  string
	TokensTransferredInUnit string
	TokensTransferredSymbol string

	GasUsed        string
	GasFeeTotal    string
	GasFeeFailedTx string

	// Fields from joined address
	Type     addressdetail.AddressType
	Name     string
	Symbol   string
	Decimals uint8
}
